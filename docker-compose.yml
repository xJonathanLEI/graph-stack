version: "3.8"
services:
  postgres:
    image: postgres:14.0
    command: ["postgres", "-cshared_preload_libraries=pg_stat_statements"]
    environment:
      POSTGRES_USER: "graph-node"
      POSTGRES_PASSWORD: "4feaf4ae-68cf-495c-ac36-6752b0a2f0e5"
      POSTGRES_DB: "graph-node"
    volumes:
      - ${DATA_PATH}/postgres:/var/lib/postgresql/data

  graph-node:
    image: graphprotocol/graph-node:v0.24.2
    depends_on:
      - postgres
    environment:
      GRAPH_LOG: "info"
      GRAPH_ETHEREUM_REQUEST_RETRIES: "1"
      postgres_host: "postgres"
      postgres_user: "graph-node"
      postgres_pass: "4feaf4ae-68cf-495c-ac36-6752b0a2f0e5"
      postgres_db: "graph-node"
      ipfs: "${IPFS_API}"
      ethereum: "mainnet:${ETH_MAINNET_RPC} bsc:${BSC_MAINNET_RPC}"

  gateway:
    image: nginx:1.21.3
    entrypoint: "/entry.sh"
    environment:
      GRAPH_GRAPHQL_HOST: "${GRAPH_GRAPHQL_HOST}"
      GRAPH_SUBSCRIPTION_HOST: "${GRAPH_SUBSCRIPTION_HOST}"
      GRAPH_JSONRPC_HOST: "${GRAPH_JSONRPC_HOST}"
      GRAPH_INDEXNODE_HOST: "${GRAPH_INDEXNODE_HOST}"
      GRAPH_METRICS_HOST: "${GRAPH_METRICS_HOST}"
      GRAPH_TOKEN: "${GRAPH_TOKEN}"
    volumes:
      - ./nginx/common/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/common/http_proxy_pass.conf:/etc/nginx/http_proxy_pass.conf:ro
      - ./nginx/common/reverse_proxy.conf:/etc/nginx/reverse_proxy.conf:ro
      - ./nginx/common/ws_proxy_pass.conf:/etc/nginx/ws_proxy_pass.conf:ro
      - ./nginx/gateway/default.conf:/etc/nginx/template.conf:ro
      - ./entrypoints/gateway.sh:/entry.sh:ro

  tunnel:
    image: xjonathanlei/cloudflare-tunnel:0.1.0
    environment:
      CERT_PEM_BASE64: "${TUNNEL_CERT_PEM_BASE64}"
      CLOUDFLARE_ACCOUNT_ID: "${TUNNEL_CLOUDFLARE_ACCOUNT_ID}"
      CLOUDFLARE_TUNNEL_ID: "${TUNNEL_CLOUDFLARE_TUNNEL_ID}"
      CLOUDFLARE_TUNNEL_SECRET: "${TUNNEL_CLOUDFLARE_TUNNEL_SECRET}"
      CLOUDFLARE_TUNNEL_NAME: "${TUNNEL_CLOUDFLARE_TUNNEL_NAME}"
      TARGET_URL: "http://gateway:80"
